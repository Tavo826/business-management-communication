version: '3.9'

services:
  business-communication:
    build: .
    container_name: business-communication
    expose:
      - "${PORT}:8080"
    volumes:
      - ./BusinessCommunication/BusinessCommunication/prompt.txt:/app/prompt.txt:ro
    environment:
      - Settings__BusinessCommunication__ApplicationName=${Settings__BusinessCommunication__ApplicationName}
      - Settings__HttpSettings__ApiMetaUrl=${Settings__HttpSettings__ApiMetaUrl}
      - Settings__HttpSettings__BusinessManagerPersistanceUrl=${Settings__HttpSettings__BusinessManagerPersistanceUrl}
      - Settings__HttpSettings__ApiModelUrl=${Settings__HttpSettings__ApiModelUrl}
      - Settings__HttpSettings__MetaAccessKey=${Settings__HttpSettings__MetaAccessKey}
      - Settings__HttpSettings__MetaKeyId=${Settings__HttpSettings__MetaKeyId}
      - Settings__HttpSettings__GoogleApiKey=${Settings__HttpSettings__GoogleApiKey}
      - Settings__CommunicationSettings__MessageProduct=${Settings__CommunicationSettings__MessageProduct}
      - Settings__CommunicationSettings__RecipientType=${Settings__CommunicationSettings__RecipientType}
      - Settings__CommunicationSettings__MessageType=${Settings__CommunicationSettings__MessageType}
      - Settings__CommunicationSettings__GoogleSheetsSettings__ServiceAccountJson=${Settings__CommunicationSettings__GoogleSheetsSettings__ServiceAccountJson}
    restart: always
    networks:
      - webnet

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    depends_on:
      - business-communication
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - webnet

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; while :; do
        certbot renew --webroot -w /var/www/certbot --quiet;
        sleep 12h & wait $${!};
      done"

networks:
  webnet:
    driver: bridge
